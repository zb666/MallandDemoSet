apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile "com.android.support:appcompat-v7:$rootProject.ext.android.supportVersion"
    compile "com.android.support:recyclerview-v7:$rootProject.ext.android.supportVersion"
    compile "com.android.support:design:$rootProject.ext.android.supportVersion"
    //net
    compile "com.squareup.retrofit2:retrofit:$rootProject.ext.net.retrofitVersion"
    compile "com.squareup.okhttp3:logging-interceptor:$rootProject.ext.net.okhttpInterceptor"
    //fastjson
    compile "com.alibaba:fastjson:$rootProject.ext.net.fastJsonVersion"
    //scalars
    compile "com.squareup.retrofit2:converter-scalars:$rootProject.ext.net.scalarsVersion"
    //adapter
    compile "com.squareup.retrofit2:adapter-rxjava2:$rootProject.ext.rx.rxAdapterVersion"
    //rx
    compile "io.reactivex.rxjava2:rxandroid:$rootProject.ext.rx.rxandroidVersion"
    compile "io.reactivex.rxjava2:rxjava:$rootProject.ext.rx.rxjavaVersion"
    compile "com.jakewharton.rxbinding:rxbinding:$rootProject.ext.rx.rxBindingVersion"
    //EventBus
    compile "org.greenrobot:eventbus:$rootProject.ext.android.eventBusVersion"
    //高德地图
    //compile "com.amap.api:3dmap:$rootProject.ext.android.mapVersion"
    //compile "com.amap.api:location:$rootProject.ext.android.locationVersion"
    //照片管理
    compile "com.jph.takephoto:takephoto_library:$rootProject.ext.ui.takePhotoVersion"
    compile "com.tbruyelle.rxpermissions2:rxpermissions:$rootProject.ext.rx.rxPermissionVersion"
    //日志管理
    compile "com.jakewharton.timber:timber:$rootProject.ext.android.timerVersion"
    //leakCanary
    debugCompile "com.squareup.leakcanary:leakcanary-android:$rootProject.ext.android.leakcanaryVersion"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:$rootProject.ext.android.leakcanaryVersion"
    //沉浸式状态栏
    compile project(':ui_factory')
    compile('com.alibaba.android:vlayout:1.2.2@aar') {
        transitive = true
    }
    //处置滚动的跑马灯
    compile 'com.sunfusheng:marqueeview:1.3.2'
    //leftcycle
    compile 'com.trello:rxlifecycle-components:0.6.1'
    //底部导航栏
    compile 'com.ashokvarma.android:bottom-navigation-bar:2.0.3'
    //gson
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    //aop aspect 切面注入
    compile 'org.aspectj:aspectjrt:1.8.9'

    testCompile 'junit:junit:4.12'
}

//import org.aspectj.bridge.IMessage
//import org.aspectj.bridge.MessageHandler
//import org.aspectj.tools.ajc.Main
//final def log = project.logger
//final def variants = project.android.applicationVariants
//
//variants.all { variant ->
//    if (!variant.buildType.isDebuggable()) {
//        log.debug("Skipping non-debuggable build type '${variant.buildType.name}'.")
//        return;
//    }
//
//    JavaCompile javaCompile = variant.javaCompile
//    javaCompile.doLast {
//        String[] args = ["-showWeaveInfo",
//                         "-1.8",
//                         "-inpath", javaCompile.destinationDir.toString(),
//                         "-aspectpath", javaCompile.classpath.asPath,
//                         "-d", javaCompile.destinationDir.toString(),
//                         "-classpath", javaCompile.classpath.asPath,
//                         "-bootclasspath", project.android.bootClasspath.join(File.pathSeparator)]
//        log.debug "ajc args: " + Arrays.toString(args)
//
//        MessageHandler handler = new MessageHandler(true);
//        new Main().run(args, handler);
//        for (IMessage message : handler.getMessages(null, true)) {
//            switch (message.getKind()) {
//                case IMessage.ABORT:
//                case IMessage.ERROR:
//                case IMessage.FAIL:
//                    log.error message.message, message.thrown
//                    break;
//                case IMessage.WARNING:
//                    log.warn message.message, message.thrown
//                    break;
//                case IMessage.INFO:
//                    log.info message.message, message.thrown
//                    break;
//                case IMessage.DEBUG:
//                    log.debug message.message, message.thrown
//                    break;
//            }
//        }
//    }
//}
